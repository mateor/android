#Build Instructions
---------------------------------

**PA has a vendor structure which can serve to obfuscate which repos are actually used in the project. They use a product.adds system that brings in other repos after lunching. I intend to remove that from this project so that a look at the manifest can show exactly what is used to build the rom. But that hasn't been done yet. Look at my android_vendor_pa fork for the products/encore.adds and encore.removes for now.**

<i>This manifest can also be used to build PA for Android 4.0. Simply substitute </i><code><b>ics</b></code><i> for </i><code><b>jellybean</b></code><i> everywhere it appears.</i>

These instructions are meant for 64 bit Linux environments although they will work on OS X as well. You can try VirtualBox if you don't use Linux normally.


##Environment Set-up
*	Take 15 minutes and follow the beginning of [this guide](http://wiki.cyanogenmod.org/wiki/Template:Build_from_source). You can skip downloading the SDK if you wish.
*	If you need help installing/configuring the JDK, try method #2 [here](http://softwareinabottle.wordpress.com/2011/11/17/install-sun-jdk-6-on-ubuntu-11-10/)

When it gets to the step to intialize the repo (repo init -u ETC.) <b>STOP</b> and come back here.

<b>You are done with that guide, forever.</b> Those steps only needed to be done once.

##Sync and Build

		repo init -u git://github.com/mateor/android.git -b jellybean
		repo sync

<i>and when the source is done downloading</i>:

		./rom-build.sh encore

<b>You're done!</b> When it is done compiling, your ROM will be waiting for you at 
$CROOT/out/target/product/encore.

##Future Builds
Whenever you would like to pull the latest changes, simply repo sync and run the build script again. Consider cleaning your intermediate files and building from scratch every couple weeks or so by running 

		make clobber
after repo sync.
